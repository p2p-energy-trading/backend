import { ApiProperty } from '@nestjs/swagger';
import {
  IsString,
  IsNotEmpty,
  IsOptional,
  IsDateString,
} from 'class-validator';

export class EnergyReadingDto {
  @ApiProperty({
    description: 'Reading ID',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  readingId: string;

  @ApiProperty({
    description: 'Smart meter ID',
    example: 'SM001',
  })
  meterId: string;

  @ApiProperty({
    description: 'Timestamp of reading',
    example: '2025-10-23T10:30:00.000Z',
  })
  timestamp: string;

  @ApiProperty({
    description: 'Load power consumption in Watts',
    example: 994.8,
  })
  loadPower: number;

  @ApiProperty({
    description: 'Solar power generation in Watts',
    example: 1275.8,
  })
  solarPower: number;

  @ApiProperty({
    description: 'Export power to grid in Watts',
    example: 38.6,
  })
  exportPower: number;

  @ApiProperty({
    description: 'Import power from grid in Watts',
    example: 0.8,
  })
  importPower: number;

  @ApiProperty({
    description: 'Battery power (positive = charging, negative = discharging)',
    example: 152.2,
  })
  batteryPower: number;

  @ApiProperty({
    description: 'Battery state',
    example: 'charging',
    enum: ['charging', 'discharging', 'idle'],
  })
  batteryState: string;
}

export class EnergyStatsDto {
  @ApiProperty({
    description: 'Total energy generated by solar (kWh)',
    example: '15.234',
  })
  totalGenerated: string;

  @ApiProperty({
    description: 'Total energy consumed by load (kWh)',
    example: '10.116',
  })
  totalConsumed: string;

  @ApiProperty({
    description: 'Total energy exported to grid (kWh)',
    example: '1.960',
  })
  totalExported: string;

  @ApiProperty({
    description: 'Total energy imported from grid (kWh)',
    example: '0.004',
  })
  totalImported: string;

  @ApiProperty({
    description: 'Net energy balance (kWh)',
    example: '1.956',
  })
  netEnergy: string;
}

export class SettlementEstimateDto {
  @ApiProperty({
    description: 'Estimated ETK tokens to be minted/burned',
    example: '1.956',
  })
  estimatedEtk: string;

  @ApiProperty({
    description: 'Net energy in kWh',
    example: '1.956',
  })
  netEnergyKwh: string;

  @ApiProperty({
    description: 'Energy accumulated since last settlement',
    example: {
      export: '1.960',
      import: '0.004',
    },
  })
  settlementEnergy: {
    export: string;
    import: string;
  };

  @ApiProperty({
    description: 'Time until next settlement',
    example: '4 minutes',
  })
  nextSettlementIn: string;
}

export class SettlementRecordDto {
  @ApiProperty({
    description: 'Settlement ID',
    example: '123e4567-e89b-12d3-a456-426614174000',
  })
  settlementId: string;

  @ApiProperty({
    description: 'Smart meter ID',
    example: 'SM001',
  })
  meterId: string;

  @ApiProperty({
    description: 'Settlement timestamp',
    example: '2025-10-23T10:30:00.000Z',
  })
  settlementTimestamp: string;

  @ApiProperty({
    description: 'Net energy in kWh',
    example: '1.956',
  })
  netEnergyKwh: string;

  @ApiProperty({
    description: 'ETK tokens minted/burned',
    example: '1.956',
  })
  etkAmount: string;

  @ApiProperty({
    description: 'Blockchain transaction hash',
    example:
      '0xabcd1234567890abcdef1234567890abcdef1234567890abcdef1234567890ab',
  })
  blockchainTxHash: string;

  @ApiProperty({
    description: 'Settlement status',
    example: 'SUCCESS',
    enum: ['PENDING', 'SUCCESS', 'FAILED'],
  })
  status: string;
}
